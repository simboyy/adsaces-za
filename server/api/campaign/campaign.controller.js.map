{"version":3,"sources":["api/campaign/campaign.controller.js"],"names":["myCampaigns","pubCampaignsCalendar","pubCampaigns","index","show","create","update","destroy","config","email","telerivet","require","sendSMS","contact","API_KEY","PROJECT_ID","tr","API","project","initProjectById","sendMessage","to_number","content","err","message","InventoryUpdate","res","items","req","body","each","item","startDateTemp","Date","startDate","toISOString","endDateTemp","endDate","cdate","yyyy","getFullYear","q","$and","publisher","name","$lt","$gte","findOneAndUpdate","$inc","upsert","setDefaultsOnInsert","runValidators","exec","CampaignPlaced","statusCode","to","send","mailOptions","entity","status","json","CampaignUpdated","respondWithResult","saveUpdates","updates","updated","merge","save","then","removeEntity","remove","end","handleEntityNotFound","handleError","isJson","str","JSON","parse","e","query","where","find","campaigns","aggregate","$unwind","$project","_id","title","startsAt","endsAt","allDay","incrementsBadgeTotal","color","primary","secondary","result","catch","findById","params","id","uid","user","shortId","campaignNo","generate","__v","$set","price","category","quantity"],"mappings":"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","file":"campaign.controller.js","sourcesContent":["/**\n * Using Rails-like standard naming convention for endpoints.\n * GET     /api/Campaigns              ->  index\n * POST    /api/Campaigns              ->  create\n * GET     /api/Campaigns/:id          ->  show\n * PUT     /api/Campaigns/:id          ->  update\n * DELETE  /api/Campaigns/:id          ->  destroy\n */\n\n'use strict';\n\n\n\nimport _ from 'lodash';\nimport Campaign from './campaign.model';\nimport * as config from '../../config/environment/shared'\nimport * as email from '../sendmail/send';\nimport Product from '../product/product.model';\nimport Order from '../order/order.model';\nimport Inventory from '../inventory/inventory.model';\n\nvar telerivet = require('telerivet');\n\n\nfunction sendSMS(contact){\n  \nvar API_KEY = 'm8DRXIAiyHEajBMZ0Kf6mAb6ZfUwtK5d';  // from https://telerivet.com/api/keys\nvar PROJECT_ID = 'PJ866bd4a877ff3d0e'; \n\nvar tr = new telerivet.API(API_KEY);\n\nvar project = tr.initProjectById(PROJECT_ID); \n\n// send message\n\nproject.sendMessage({\n    to_number: '+263773439246', \n    content: 'Hello from Mediabox!'\n}, function(err, message) {\n    if (err) throw err;\n    ////console.log(message);\n});\n\n\n\n}\n\nfunction InventoryUpdate(res) {\n  ////console.log(res.req.body.items);\n  var items = res.req.body.items;\n  _.each(items,function(item){\n\n            var startDateTemp = new Date(item.startDate);\n            var startDate     =startDateTemp.toISOString();\n            var endDateTemp   = new Date(item.endDate);\n            var endDate       = endDateTemp.toISOString();\n    \n    var cdate = new Date();\n    var yyyy  = cdate.getFullYear();\n    var q     = { $and:[{ 'pname': item.publisher},{'vname':item.name},{'year':yyyy},{'startDate': { $lt: startDate}} , {'endDate': { $gte: endDate }}]};\n\n    //console.log(q);\n     Inventory.findOneAndUpdate(q, { $inc: { \"available\": -1 } }, {upsert: false, setDefaultsOnInsert: true, runValidators: true}).exec()\n  })\n    \n}\n\n\n\nfunction CampaignPlaced(res, statusCode) {\n  res.req.body.to = res.req.body.email;\n   email.send(config.mailOptions.CampaignPlaced(res.req.body))\n\n  statusCode = statusCode || 200;\n  return function(entity) {\n    if (entity) {\n      res.status(statusCode).json(entity);\n    }\n  };\n}\n\nfunction CampaignUpdated(res, statusCode) {\n  email.send(config.mailOptions.CampaignUpdated(res.req.body))\n\n  statusCode = statusCode || 200;\n  return function(entity) {\n    if (entity) {\n      res.status(statusCode).json(entity);\n    }\n  };\n}\n\nfunction respondWithResult(res, statusCode) {\n  statusCode = statusCode || 200;\n  return function(entity) {\n    if (entity) {\n      res.status(statusCode).json(entity);\n    }\n  };\n}\n\nfunction saveUpdates(updates) {\n\n  ////console.log(updates);\n\n\n  return function(entity) {\n\n    var updated = _.merge(entity, updates);\n\n    \n    return updated.save()\n      .then(updated => {\n        return updated;\n      });\n  };\n}\n\nfunction removeEntity(res) {\n  return function(entity) {\n    if (entity) {\n      return entity.remove()\n        .then(() => {\n          res.status(204).end();\n        });\n    }\n  };\n}\n\nfunction handleEntityNotFound(res) {\n  return function(entity) {\n    if (!entity) {\n      res.status(404).end();\n      return null;\n    }\n    return entity;\n  };\n}\n\nfunction handleError(res, statusCode) {\n  statusCode = statusCode || 500;\n  return function(err) {\n    res.status(statusCode).send(err);\n  };\n}\n\n// Get all Campaigns by a user\nexport function myCampaigns(req, res) {\n  function isJson(str) {\n  try {\n      str = JSON.parse(str);\n  } catch (e) {\n      str = str;\n  }\n  return str\n}\n  var q = isJson(req.query.where);\n  ////console.log(q);\n\n  Campaign.find(q,function (err, campaigns) {\n    if(err) { return handleError(res, err); }\n    return res.status(200).json(campaigns);\n  });\n}\n\n\n// Get all campaigns for a publisher\n// List all advertising spaces\n\nexport function pubCampaignsCalendar(req, res) {\n   Order.aggregate([\n      {$unwind:\"$items\"},\n      {$project: { _id:0, title: \"name\",startsAt: \"$items.startDate\",endsAt: \"$items.endDate\",allDay:true ,incrementsBadgeTotal: true,  color: { primary: '#e3bc08', secondary: '#fdf1ba'  }}}\n    ], function (err, result) {\n        if (err) {\n            //console.log(err);\n            return;\n        }\n         \n        return res.status(200).json(result);\n    });\n}\n\n\n// Get all Campaigns by a publisher\nexport function pubCampaigns(req, res) {\n   function isJson(str) {\n  try {\n      str = JSON.parse(str);\n  } catch (e) {\n      str = str;\n  }\n  return str\n}\n  var q = isJson(req.query.where);\n  ////console.log(q);\n\n  Campaign.find(q,function (err, campaigns) {\n    if(err) { return handleError(res, err); }\n    return res.status(200).json(campaigns);\n  });\n}\n\n// Gets a list of Campaigns\nexport function index(req, res) {\n  return Campaign.find().exec()\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n\n// Gets a single Campaign from the DB\nexport function show(req, res) {\n  return Campaign.findById(req.params.id).exec()\n    .then(handleEntityNotFound(res))\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n\n// Creates a new Campaign in the DB\nexport function create(req, res) {\n  req.body.uid = req.user.email; // id change on every user creation hence email is used\n  var shortId = require('shortid');\n  req.body.campaignNo = shortId.generate();\n\n  // When Campaign.status is null, the client will replace with the Array[0] of Campaign status at Settings page\n  return Campaign.create(req.body)\n    .then(CampaignPlaced(res, 201))\n    .then(InventoryUpdate(res))\n    .catch(handleError(res));\n}\n\n// Updates an existing Campaign in the DB\nexport function update(req, res) {\n  if(req.body._id) { delete req.body._id; }\n  if(req.body.__v) { delete req.body.__v; }\n  ////console.log(req.body);\n\n  if(!req.body.status){ \n\n    Campaign.update( \n    { _id: req.params.id , \"items.name\": req.body.items.name  }, \n    { $set: { \"items.$.price\": req.body.items.price ,  \"items.$.category\": req.body.items.category ,  \"items.$.quantity\": req.body.items.quantity } }\n    ).exec()\n    .then(handleEntityNotFound(res))\n    .then(CampaignUpdated(res))\n    .catch(handleError(res));\n  }else if(req.body.status){\n  return Campaign.findById(req.params.id).exec()\n    .then(handleEntityNotFound(res))\n    .then(saveUpdates(req.body))\n    .then(CampaignUpdated(res))\n    .catch(handleError(res));\n}\n\n}\n\n// Deletes a Campaign from the DB\nexport function destroy(req, res) {\n  return Campaign.findById(req.params.id).exec()\n    .then(handleEntityNotFound(res))\n    .then(removeEntity(res))\n    .catch(handleError(res));\n}\n"]}