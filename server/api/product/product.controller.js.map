{"version":3,"sources":["api/product/product.controller.js"],"names":["productList","productList2","productDetails","index","show","pubProducts","create","update","destroy","async","require","isJson","str","JSON","parse","e","respondWithResult","res","statusCode","entity","status","json","saveUpdates","updates","updated","extend","save","then","removeEntity","remove","end","handleEntityNotFound","handleError","err","send","exports","count","req","query","q","where","find","exec","aggregate","$match","user","email","$project","_id","EmployeeID","FirstName","EmployeeName","LastName","Title","Country","City","Address","HomePhone","Notes","result","value","text","$unwind","ProductID","ProductName","Category","UnitsInStock","UnitsOnOrder","ReorderLevel","priceRange","findOne","sort","doc","min","max","variants","price","skip","parseInt","limit","select","p","products","catch","findById","params","id","populate","path","body","uid","now","Date","updated_at","created_at","name","nameLower","toString","toLowerCase","slug","replace","$pull","multi","removeConnectionsCB","obj","category","$addToSet"],"mappings":"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","file":"product.controller.js","sourcesContent":["/**\n * Using Rails-like standard naming convention for endpoints.\n * GET     /api/products              ->  index\n * POST    /api/products              ->  create\n * GET     /api/products/:id          ->  show\n * PUT     /api/products/:id          ->  update\n * DELETE  /api/products/:id          ->  destroy\n */\n\n'use strict';\n\nimport _ from 'lodash';\nimport Product from './product.model';\nimport Category from '../category/category.model';\n        var async = require(\"async\");\n\nfunction isJson(str) {\n  try {\n      str = JSON.parse(str);\n  } catch (e) {\n      str = str;\n  }\n  return str\n}\n\nfunction respondWithResult(res, statusCode) {\n  statusCode = statusCode || 200;\n  return function(entity) {\n    \n    if (entity) {\n      res.status(statusCode).json(entity);\n    }\n  };\n}\n\nfunction saveUpdates(updates) {\n  return function(entity) {\n    var updated = _.extend(entity, updates);\n    return updated.save()\n      .then(updated => {\n        return updated;\n      });\n  };\n}\n\nfunction removeEntity(res) {\n  return function(entity) {\n    if (entity) {\n      return entity.remove()\n        .then(() => {\n          res.status(204).end();\n        });\n    }\n  };\n}\n\nfunction handleEntityNotFound(res) {\n  return function(entity) {\n    if (!entity) {\n      res.status(404).end();\n      return null;\n    }\n    return entity;\n  };\n}\n\nfunction handleError(res, statusCode) {\n  statusCode = statusCode || 500;\n  return function(err) {\n    res.status(statusCode).send(err);\n  };\n}\n\n// Get all features group\nexports.count = function(req, res) {\n  if(req.query){\n    var q = isJson(req.query.where);\n    Product.find(q).count().exec(function (err, count) {\n      if(err) { return handleError(res, err); }\n      return res.status(200).json([{count:count}]);\n    });\n  }\n};\n\n// Get product liast\n// report\nexport function productList(req, res) {\n\n    Product.aggregate([\n     {$match:{'uid' : req.user.email}},\n     {$project: { _id:0,EmployeeID: \"$name\",FirstName:\"$name\", EmployeeName: \"$name\",LastName:\"$name\",Title:\"$name\",Country:\"Zimbabwe\",City:\"Zimbabwe\",Address:\"$website\",HomePhone:\"$phone\",Notes:\"$info\"}}\n    ], function (err, result) {\n        if (err) {\n            //console.log(err);\n            return;\n        }\n  \n        return res.status(200).json(result);\n    });\n}\n\n\n// Get product liast\n// report\nexport function productList2(req, res) {\n\n    Product.aggregate([\n     {$match:{'uid' : req.user.email}},\n     {$project: { _id:0,value: \"$name\",text:\"$name\"}}\n    ], function (err, result) {\n        if (err) {\n            //console.log(err);\n            return;\n        }\n  \n        return res.status(200).json(result);\n    });\n}\n\n\n// Get product details\n// report\nexport function productDetails(req, res) {\n\n    Product.aggregate([\n    {$match:{'uid' : req.user.email}},\n    { $unwind : \"$variants\" },{$project: { _id:0,ProductID: \"$name\",ProductName:\"$name\", Category: \"$variants.name\",UnitsInStock:\"1\",UnitsOnOrder:\"0\",ReorderLevel:\"1\"}}\n    ], function (err, result) {\n        if (err) {\n            //console.log(err);\n            return;\n        }\n  \n        return res.status(200).json(result);\n    });\n}\n\nexports.priceRange = function(req, res) {\n    var q = isJson(req.query.where);\n    Product.findOne({ }).sort('-variants.price').exec().then(function(doc,err) {\n        return res.status(200).json({min:0,max:doc.variants[0].price});\n    });\n    // Product.aggregate(\n    //     {$match: q},\n    //     {$project:{\"variants.price\":1}},\n    //     {$unwind:\"$variants\"},\n    //     {$sort:{\"variants.price\":-1}},\n    //     // {$limit:1},\n    //     function (err,data) {\n    //       // //console.log('xxxxxxxxxxx',err,data);\n    //       if(err) { return handleError(res, err); }\n    //       if(data.length>0){\n    //         if(!data[data.length-1].variants.price) data[data.length-1].variants.price = 0; // If price blank for last record\n    //         return res.status(200).json({min:data[data.length-1].variants.price,max:data[0].variants.price});\n    //       }else{\n    //         return res.status(200).json({min:0,max:10000});\n    //       }\n    //     }\n    // );\n};\n\n// Gets a list of Products\nexport function index(req, res) {\n  if(req.query){\n    \n    var q = isJson(req.query.where);\n    //console.log(q);\n    var sort = isJson(req.query.sort);\n    req.query.skip = parseInt(req.query.skip);\n    req.query.limit = parseInt(req.query.limit);\n    var select = isJson(req.query.select);\n      \n        var p = [];\n        Product.find(q).limit(req.query.limit).skip(req.query.skip).sort(sort).select(select).exec(function (err, products) {\n          if(err) { return handleError(res, err); }\n          return res.status(200).json(products);\n      }); \n  }else{\n  return Product.find().exec()\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n  }\n}\n\n// Gets a single Product from the DB\nexport function show(req, res) {\n  return Product.findById(req.params.id).populate({path: 'brand'}).populate({path: 'category'}).exec()\n    .then(handleEntityNotFound(res))\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n\n// Get all orders for a publisher\nexport function pubProducts(req, res) {\n   return Product.find({ 'uid': req.user.email }).exec().then(respondWithResult(res)).catch(handleError(res));\n \n}\n\n// Creates a new Product in the DB\nexport function create(req, res) {\n  req.body.uid = req.user.email; // id change on every login hence email is used\n  var now = Date.now();\n  req.body.updated = now;\n  req.body.updated_at = now;\n  req.body.created_at = now;\n  if(req.body.name)\n    req.body.nameLower = req.body.name.toString().toLowerCase();\n  if(!req.body.slug && req.body.name)\n    req.body.slug = req.body.name.toString().toLowerCase()\n                      .replace(/\\s+/g, '-')        // Replace spaces with -\n                      .replace(/[^\\w\\-]+/g, '')   // Remove all non-word chars\n                      .replace(/\\-\\-+/g, '-')      // Replace multiple - with single -\n                      .replace(/^-+/, '')          // Trim - from start of text\n                      .replace(/-+$/, '');\n  return Product.create(req.body)\n    .then(respondWithResult(res, 201))\n    .catch(handleError(res));\n}\n\n// Updates an existing Product in the DB\nexport function update(req, res) {\n  if(req.body._id) { delete req.body._id; }\n  var now = Date.now();\n  req.body.updated = now;\n  req.body.updated_at = now;\n  if ( !req.body.uid ) \n    req.body.uid = req.user.email;\n  \n  if(req.body.name)\n    req.body.nameLower = req.body.name.toString().toLowerCase();\n  \n  // Just to enable checking if the category has any product\n  Category.update( \n      {  },\n      { $pull: { products : { _id : req.params.id } } },\n      { multi: true },\n      function removeConnectionsCB(err, obj) {\n        if(req.body.category){\n          // //console.log(err,obj)\n          Category.update(\n            { _id: req.body.category }, // Find the category from category model\n            { $addToSet: {'products':{'_id': req.params.id}}}, // Update the prduct id into category model\n            function removeConnectionsCB(err, obj) {\n              // //console.log(err,obj)\n            }\n          )\n        }\n      }\n  )\n\n  return Product.findById(req.params.id).exec()\n    .then(handleEntityNotFound(res))\n    .then(saveUpdates(req.body))\n    .then(respondWithResult(res))\n    .catch(handleError(res))\n}\n\n// Deletes a Product from the DB\nexport function destroy(req, res) {\n  return Product.findById(req.params.id).exec()\n    .then(handleEntityNotFound(res))\n    .then(removeEntity(res))\n    .catch(handleError(res));\n}\n"]}