{"version":3,"sources":["api/order/order.model.js"],"names":["OrderSchema","Schema","uid","String","email","phone","orderNo","campaignName","address","Object","payment","amount","exchange_rate","Number","items","sku","name","size","url","quantity","mrp","price","image","category","advertiser","publisher","status","val","type","default","active","Boolean","payment_method","created_at","Date","updated_at","pre","next","now","model"],"mappings":"AAAA;;;;;;AAEA;;;;;;AAEA,IAAIA,cAAc,IAAI,mBAASC,MAAb,CAAoB;AACpCC,OAAKC,MAD+B;AAEpCC,SAAOD,MAF6B;AAGpCE,SAAOF,MAH6B;AAIpCG,WAASH,MAJ2B;AAKpCI,gBAAcJ,MALsB;AAMpCK,WAASC,MAN2B;AAOpCC,WAASD,MAP2B;AAQpCE,UAAQF,MAR4B;AASpCG,iBAAeC,MATqB;AAUpCC,SAAO,CAAC,EAAEC,KAAKZ,MAAP,EAAea,MAAMb,MAArB,EAA6Bc,MAAMd,MAAnC,EAA2Ce,KAAKf,MAAhD,EAAwDgB,UAAUhB,MAAlE,EAA0EiB,KAAKjB,MAA/E,EAAuFkB,OAAOlB,MAA9F,EAAsGmB,OAAOnB,MAA7G,EAAqHoB,UAAUpB,MAA/H,EAAsIqB,YAAYf,MAAlJ,EAA2JgB,WAAUtB,MAArK,EAA6KD,KAAIC,MAAjL,EAAwLuB,QAAQjB,OAAO,EAAEO,MAAMb,MAAR,EAAgBwB,KAAKd,MAArB,EAAP,CAAhM,EAAD,CAV6B;AAWpCa,UAAQ,EAACE,MAAMzB,MAAP,EAAe0B,SAAS,cAAxB,EAX4B;AAYpCC,UAAQ,EAAEF,MAAMG,OAAR,EAAiBF,SAAS,IAA1B,EAZ4B;AAapCG,kBAAgB7B,MAboB;AAcpC8B,cAAgB,EAAEL,MAAMM,IAAR,EAdoB;AAepCC,cAAgB,EAAEP,MAAMM,IAAR;AAfoB,CAApB,CAAlB;;AAqBAlC,YAAYoC,GAAZ,CAAgB,MAAhB,EAAwB,UAASC,IAAT,EAAc;AACpC,MAAIC,MAAM,IAAIJ,IAAJ,EAAV;AACA,OAAKC,UAAL,GAAkBG,GAAlB;AACA,MAAK,CAAC,KAAKL,UAAX,EAAwB;AACtB,SAAKA,UAAL,GAAkBK,GAAlB;AACD;AACDD;AACD,CAPD;;kBASe,mBAASE,KAAT,CAAe,OAAf,EAAwBvC,WAAxB,C","file":"order.model.js","sourcesContent":["'use strict';\n\nimport mongoose from 'mongoose';\n\nvar OrderSchema = new mongoose.Schema({\n  uid: String,\n  email: String,\n  phone: String,\n  orderNo: String,\n  campaignName: String,\n  address: Object,\n  payment: Object,\n  amount: Object,\n  exchange_rate: Number,\n  items: [{ sku: String, name: String, size: String, url: String ,quantity: String, mrp: String, price: String, image: String, category: String,advertiser: Object , publisher:String ,uid:String,status: Object({ name: String, val: Number})}],\n  status: {type: String, default: 'Order Placed'},\n  active: { type: Boolean, default: true },\n  payment_method: String,\n  created_at    : { type: Date },\n  updated_at    : { type: Date }\n});\n\n\n\n\nOrderSchema.pre('save', function(next){\n  var now = new Date();\n  this.updated_at = now;\n  if ( !this.created_at ) {\n    this.created_at = now;\n  }\n  next();\n});\n\nexport default mongoose.model('Order', OrderSchema);\n\n\n "]}