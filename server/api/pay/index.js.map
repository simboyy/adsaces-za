{"version":3,"sources":["api/pay/index.js"],"names":["controller","auth","sendmail","config","shortId","require","router","post","req","res","data","body","amount","Math","round","total","stripe","process","env","STRIPE_APIKEY","charges","create","currency","source","stripeToken","description","err","charge","status","json","id","requestId","message","address","recipient_name","name","line1","city","postal_code","zip","state","country","orderDetails","orderNo","generate","uid","email","phone","items","payment","cart","currency_code","exchange_rate","created","payment_method","d","mailParams","to","send","mailOptions","orderPlaced","get","JSON","parse","query","options","subtotal","discount","shipping","isNaN","k","length","i","price","quantity","push","sku","url","image","slug","configure","PAYPAL_MODE","PAYPAL_CLIENT_ID","PAYPAL_CLIENT_SECRET","payReq","DOMAIN","country_code","error","console","log","msg","code","response","details","redirect","payer","payer_info","payer_id","transactions","custom","invoice_number","item_list","shipping_address","created_time","links","forEach","linkObj","rel","href","method","hasOwnProperty","approval_url","paymentId","payerId","PayerID","string","execute","findOneAndUpdate","upsert","setDefaultsOnInsert","runValidators","exec","encodeURIComponent","then","doc","module","exports"],"mappings":"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","file":"index.js","sourcesContent":["'use strict';\n\nimport {Router} from 'express';\nimport * as controller from './pay.controller';\nimport * as auth from '../../auth/auth.service';\nimport paypal from 'paypal-rest-sdk';\nimport Order from '../order/order.model';\nimport jsonpatch from 'fast-json-patch';\nimport * as sendmail from '../sendmail/send'\nimport * as config from '../../config/environment/shared'\nvar shortId = require('shortid');\n\nvar router = new Router();\n\nrouter.post('/stripe', function(req, res) {\n    var data = req.body\n    var amount = Math.round(data.total*100)\n    var stripe = require(\"stripe\")(process.env.STRIPE_APIKEY);\n\n    stripe.charges.create({\n    amount: amount,\n    currency: \"usd\",\n    source: data.stripeToken, // obtained with Stripe.js\n    description: \"Charge for mshop.codenx.com\"\n    }, function(err, charge) {\n        var status\n        if(err){\n            status = 'Payment failed'\n            return res.status(400).json({id: err.requestId, message: err.message});\n        }\n        else{\n            status = 'Paid'\n            var address = {recipient_name: data.name, line1: data.address, city: data.city, postal_code: data.zip, state: data.state,country: data.country}\n            var orderDetails = {\n                orderNo: shortId.generate(),\n                uid: data.uid,\n                email: data.email,\n                phone: data.phone,\n                address: address,\n                status: status,\n                items: data.items,\n                payment : {id: charge.id, state:charge.status, cart:null},\n                amount: {total: amount/100, currency: data.currency_code},\n                exchange_rate: data.exchange_rate,\n                created: charge.created,\n                payment_method: 'Credit Card',\n                                \n            }\n            // Order.create is from order.model not from order.controller\n            Order.create(orderDetails, function(err,d){\n                var mailParams = orderDetails\n                mailParams.id = charge.id\n                mailParams.to = data.email\n                sendmail.send(config.mailOptions.orderPlaced(mailParams))\n                return res.status(201).json({id: charge.id, message: status});\n            })\n        }\n    });\n})\n\nrouter.get('/prepare', function(req, res) {\n\n    //configure for sandbox environment\n    var items = []\n    var data = JSON.parse(req.query.data)\n    var options = JSON.parse(req.query.options)\n    var total = 0\n    var subtotal = 0\n    var discount = 0\n    var shipping = Math.round(options.shipping*options.exchange_rate*100)/100\n    if (isNaN(options.exchange_rate) || options.exchange_rate === '') // If exchange rate is not a float value, force this to 1\n        options.exchange_rate = 1\n    for (var k = 0; k < data.length; k++) {\n       var i = data[k]\n       var price = Math.round(i.price*options.exchange_rate*100)/100\n       subtotal = subtotal + price * i.quantity\n       items.push({sku: i.sku, name: i.name, url: i.image, description: i.slug, price: price, quantity: i.quantity, currency: options.currency_code})\n    }\n\n    if(options.discount>0){\n        discount = -Math.round(options.discount*options.exchange_rate*100)/100\n        items.push({sku: '#', name: 'Coupon Discount', url: '-', description: '-', price: discount, quantity: 1, currency: options.currency_code})\n    }\n    subtotal = subtotal + discount\n    total = subtotal + shipping\n    paypal.configure({\n      'mode': process.env.PAYPAL_MODE, //sandbox or live\n      'client_id': process.env.PAYPAL_CLIENT_ID,\n      'client_secret': process.env.PAYPAL_CLIENT_SECRET\n    });\n\n    var shortId = require('shortid');\n    var orderNo = shortId.generate();\n    //build PayPal payment request\n    var payReq = {\n        'intent': 'sale',\n        'redirect_urls': {\n            'return_url': process.env.DOMAIN+'/api/pay/process',\n            'cancel_url': process.env.DOMAIN+'/api/pay/cancel'\n        },\n        'payer': {\n            'payment_method': 'paypal',\n            'payer_info': {\n                'email': options.email,\n                'payer_id': options.uid\n            }\n        },\n        \"transactions\": [\n            {\n                \"amount\": {\n                    \"total\": total,//Math.round(options.total*options.exchange_rate*100)/100,\n                    \"currency\": options.currency_code,\n                    \"details\": {\n                        \"subtotal\": subtotal,//Math.round(options.subtotal*options.exchange_rate*100)/100,\n                        \"shipping\": shipping\n                    }\n                },\n                \"invoice_number\": orderNo,\n                \"custom\":options.phone,\n                \"item_list\": { \n                    \"items\":items,\n                    \"shipping_address\":{\n                        \"recipient_name\":options.recipient_name,\n                        \"line1\":options.line1,\n                        \"city\":options.city,\n                        \"postal_code\":options.postal_code,\n                        \"state\": \"-\",\n                        \"country_code\":options.country_code\n                    }\n                }\n            }\n        ]\n    };\n    paypal.payment.create(payReq, function(error, payment) {\n        if (error) {\n            console.log('########################## Error', error);\n            // string = encodeURIComponent(error.response.details[0].issue);\n            var msg = '', id = '', code=''\n            if(error.code === 'ENOTFOUND' || error.code === 'ETIMEDOUT'){\n                msg = 'Not connected to internet'\n            }\n            else{\n                code = '404'\n                msg = JSON.stringify(error.response.details)\n            }\n            res.redirect('/checkout?id='+id+'&msg=' + msg)\n        } else {\n            // console.log('paymentinfooooooooooooooooooooooooo',JSON.stringify(payment));\n            var orderDetails = {uid: payment.payer.payer_info.payer_id,email: options.email,\n                phone: payment.transactions[0].custom,\n                orderNo: payment.transactions[0].invoice_number,\n                address: payment.transactions[0].item_list.shipping_address,\n                status: 'Payment Initiated',\n                items: payment.transactions[0].item_list.items,\n                payment : {id: payment.id, state:payment.state, cart:payment.cart,email:payment.payer.payer_info.email},\n                amount: payment.transactions[0].amount,\n                exchange_rate: options.exchange_rate,\n                created: payment.created_time,\n                payment_method: payment.payer.payment_method\n            }\n            // When order.status is null, the client will replace with the Array[0] of order status at Settings page\n            // Order.create is from order.model not from order.controller\n            Order.create(orderDetails)\n                \n            //capture HATEOAS links\n            var links = {};\n            payment.links.forEach(function(linkObj) {\n                links[linkObj.rel] = {\n                    'href': linkObj.href,\n                    'method': linkObj.method\n                };\n            })\n\n            //if redirect url present, redirect user\n            if (links.hasOwnProperty('approval_url')) {\n                res.redirect(links.approval_url.href);\n            } else {\n                console.error('no redirect URI present');\n            }\n        }\n    });\n});\nrouter.get('/process', function(req, res) {\n    var paymentId = req.query.paymentId;\n    var payerId = { 'payer_id': req.query.PayerID };\n    var string = \"\"\n    paypal.payment.execute(paymentId, payerId, function(error, payment){\n        if(error){\n            // console.log('payment process error', error);\n            Order.findOneAndUpdate({'payment.id': paymentId}, {status: 'Payment Error'}, {upsert: false, setDefaultsOnInsert: true, runValidators: true}).exec()\n            string = encodeURIComponent('Error occured while receiving payment');\n            res.redirect('/checkout?id='+paymentId+'&msg=' + string);\n        } else {\n            var mailParams = {\n                id: payment.id,\n                to: payment.payer.payer_info.email,\n                orderNo: payment.transactions[0].invoice_number,\n                status: payment.state,\n                payment_method: payment.payer.payment_method,\n                amount : payment.transactions[0].amount,\n                address: payment.payer.payer_info.shipping_address\n            } \n            // console.log('payment success', payment);\n            if (payment.state === 'approved'){ \n                // Save order details so that if no response received, status will Awaiting Payment\n                Order.findOneAndUpdate({'payment.id': payment.id}, {status: 'Paid'}, {upsert: false, setDefaultsOnInsert: true, runValidators: true}).exec()\n                .then(function(doc){\n                    sendmail.send(config.mailOptions.orderPlaced(mailParams))\n                    string = encodeURIComponent(\"Order Placed\")\n                    res.redirect('/order?id='+paymentId+'&msg=' + string)\n                }).then(function(err){\n                    if(err){\n                        // console.log('Could not find the payment reference',err);\n                        sendmail.send(config.mailOptions.orderPlaced(mailParams))\n                        string = encodeURIComponent(\"Payment Received\")\n                        res.redirect('/order?id='+paymentId+'&msg=' + string)\n                    }\n                })\n            } else {\n                Order.findOneAndUpdate({'payment.id': payment.id}, {status: 'Payment Not Approved'}, {upsert: false, setDefaultsOnInsert: true, runValidators: true}).exec()\n                string = encodeURIComponent('Payment Not Approved');\n                res.redirect('/checkout?id='+paymentId+'&msg=' + string);\n            }\n        }\n})\n});\nrouter.get('/cancel', function(req, res) {\n    var string = encodeURIComponent('Payment Cancelled');\n    res.redirect('/checkout?msg=' + string);\n});\n\nmodule.exports = router;\n"]}